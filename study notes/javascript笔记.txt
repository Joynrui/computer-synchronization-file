<!DOCTYPE html>
<html>
<meta charst="utf-8">
<head>
<title>李白</title>

<style type="text/css">
body {
       color:red;
      }
</style>

<script type="text/javascript">
   //alert("月下独酌");
   //document.write("<h2>月下独酌</h2>");
   //document.write("月下独酌<br />");
   //console.log("月下独酌");
   console.getElementById("ppp").innerHTML = 5 + 6;
</script>

</head>

<body class="abc" id="def" name="mnq">

举杯邀明月，对影成三人


<p class="abc" id="ppp" ></p>
</body>
</html> 







2022.3.9
1.JS的注释
   单行注释：//这里是单行注释的内容
   多行注释：/*这里是多行注释的内容*/
2.Js中的输入和输出
   输出：
        alert("李白的诗")；
        document.write("<h2>李白的诗</h2>");
        //根据html的标签的id值来找到对应的标签，然后，在此处输出=等号后面的内容
        console.log("李白的诗");
   输入：
        prompt(text,delaultText);//第二个参数可以不传参
        prompt("请输入您的名字","张三");
        prompt("请输入您的名字");
3.变量的定义
   命名规则：
            由：数字，字母，下划线，$组成，首字母不是数字。
            建议：见名识意，驼峰命名法
            例如：字符串长度 string_length(不推荐使用)  stringLength  StringLength
           
   1.var 变量名 = 值;(推荐的写法)
   2. 变量名 = 值;
   3.var 变量名;
4.数据类型

  字符串类型
    document.write(name + "的年龄是" + age + "岁");
    document.write（"20 + 30 = " + (data1 + data2)）;
    document.write（"20 + 30 = ",data1 + data2）;
  数值型
  布尔类型
  复合类型
 
5.运算符
  
  
  
  
例子：
<!DOCTYPE html>
<html>
<meta charst="utf-8">
<head>
<title>Js的变量</title>
</head>

<body>

举杯邀明月

<script type="text/javascript">
 var name;
name="张三";
age = 20;
document.write(name);
document.write("的年龄是");
document.write(age);
document.write("岁");
</script>
</body>
</html> 

2022.3.14
一、输入、输出、对话框
     输出：
             alert("hehe");
             document.write("xixi");
             console.log("haha");
     对话框：
                confirm("对话框的提示语")；对话框有两个按钮，一个是"确定"，另一个是"取消"
                confirm的返回值是一个boolean类型
     输入：
             prompt("第一个参数是提示语","默认值");
             prompt()的返回值是用户输入的内容
二、三大结构
   顺序结构、选择结构（条件分支结构）、循环结构
   顺序结构：
                 就是从上到下依次进行
  选择结构：
                 if...else...
                 //switch...case
  循环结构：
                //for,while
5.1 if...else
     if (条件1)
     {
              语句体1
      }
      else
     {
              语句体2
      }

5.2 if...else （嵌套）
     if (表达式1)
     {
              if (表达式2)
              {
              }
               else
              {
              }
      }
     
5.3 switch...case
switch(表达式)
{
case 表达式1:
        语句体1; [break;]
case 表达式2:
        语句体2;[break;] 
case:表达式3:
        语句体3; [break;] 
default:
        语句体4;break;
}
注意:
break在这个位置是用于跳出switch的。如果case1后面没有break,会继续执行case2后面的语句体.


例子：
①
<!DOCTYPE html PUBLIC"-//W3C//DTD XHTML 1.0 Transitional/ EN"
"http://www.w3.org/TR/xhtm11/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>prompt对话框使用示例</title>
</head>

<body>
<script type="text/javascript">
    var name;
    name=prompt("你的名字是:"张三"）;
    document.write("欢迎"+name+"进入学习JavaScript的 家庭!");*
</script>
</body>
</html>

②
<head>
<meta charset="utf-8">
<title>类型转换案例</title>
</head>
<body>

  <!--弹出对话框，接受用户输入信息，如果用户有输入，就输出"一输入内容"，如果用户没有输
  入，就输入"无输入内容"。-->
<script type="text/javascript">
      //弹出对话框，接受用户输入信息
       var content = prompt();
      //判断：如果用户有输入
      if ( Boolen ( content ) )
      {
                //输出"已输入内容"
                document.write("已输入内容");
       }
       else  //否则
      {
                //输出"无输入内容"
                document.write("无输入内容");
       }
<script>
</body>
</html>

2022.3.20
循环语句：
      重复执行的动作可以写到循环体中。减少代码的书写。
      分为：for/while/do...while
      格式：for( 条件的初始化； 条件判断； 条件更新)
                {
                   循环体；
                 }


            案例：青年歌手大赛，有十个评委，输入十个评委的打分，最后的平均分就是歌手的最后得分，求歌手的最后得分；

<!doctype html><html>
<head>
<meta charset="utf-8">
<title>for循环语句应用案例</title>
</head>
<body>
<pre>
<script type="text/javascript">
//青年歌手大赛,有十个评委,求歌手的最后得分;var sum = 0;//sum用来保存和,初值为0;
for( var i = 0; i <=10;i++)//i为循环变量
//for i in l ... 10 //(谷歌浏览器验证失败)
{
var grade = prompt("第"+(i=1)+"位"评委，请输入您的打分");
sum += parseInt (grade);
}
alert("歌手的最后得分"+sum/10);
</script>
</pre></body></html>




while的循环语句：

格式:
条件的初始化;
 do {

循环体;
条件更新;
}while(条件判断)；

小结：1、一般在使用循环时，知道次数，多数都用for循环；不知道次数，多数用while循环。
           2、 不管条件是否满足要求，至少会执行一次。
           3、continue向上跳转；break向下跳转。

 案例2：使用某软件的时候，需要输入用户名和密码，一天最多三次机会。用户名是:admin，密码是:123456。输入正确，
             提示登录成功;输出三次都出错，提示锁定。
<!doctype html><html>
<head>
<meta charset="utf-8">
<meta charset="UTE-8">
<title>验证用户名和密码</title>
</head>
<body>
<script>
//输入用户名和密码，如果正确，给出弹出框提示"登录成功"，如果不对，一直输入:while
/*第一种方式while*/
var userName = prompt("请输入用户名");
var password = prompt("请输入密码");
while( userName!="admin" ll password!="123456"){
         alert("用户名或者密码有误");
         userName =prompt("请输入用户名");
         passWord=prompt("请输入密码");
   }
alert("登录成功");


